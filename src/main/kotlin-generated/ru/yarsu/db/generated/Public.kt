/*
 * This file is generated by jOOQ.
 */
package ru.yarsu.db.generated

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl
import ru.yarsu.db.generated.tables.Announcements
import ru.yarsu.db.generated.tables.Categories
import ru.yarsu.db.generated.tables.Degrees
import ru.yarsu.db.generated.tables.Users
import javax.annotation.processing.Generated
import kotlin.collections.List

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.10",
        "catalog version:1",
        "schema version:1",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {
        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.announcements</code>.
     */
    val ANNOUNCEMENTS: Announcements get() = Announcements.ANNOUNCEMENTS

    /**
     * The table <code>public.categories</code>.
     */
    val CATEGORIES: Categories get() = Categories.CATEGORIES

    /**
     * The table <code>public.degrees</code>.
     */
    val DEGREES: Degrees get() = Degrees.DEGREES

    /**
     * The table <code>public.users</code>.
     */
    val USERS: Users get() = Users.USERS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> =
        listOf(
            Announcements.ANNOUNCEMENTS,
            Categories.CATEGORIES,
            Degrees.DEGREES,
            Users.USERS,
        )
}
