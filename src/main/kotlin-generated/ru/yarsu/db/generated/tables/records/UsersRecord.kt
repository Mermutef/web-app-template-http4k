/*
 * This file is generated by jOOQ.
 */
package ru.yarsu.db.generated.tables.records

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import ru.yarsu.db.generated.tables.Users
import java.time.LocalDateTime
import javax.annotation.processing.Generated

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.10",
        "catalog version:1",
        "schema version:1",
    ],
    comments = "This class is generated by jOOQ",
)
@Suppress("UNCHECKED_CAST")
open class UsersRecord() : UpdatableRecordImpl<UsersRecord>(Users.USERS) {
    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var fcs: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var degree: Array<Int?>?
        set(value): Unit = set(2, value)
        get(): Array<Int?>? = get(2) as Array<Int?>?

    open var phone: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var vkid: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var login: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var password: ByteArray?
        set(value): Unit = set(6, value)
        get(): ByteArray? = get(6) as ByteArray?

    open var registerdate: LocalDateTime?
        set(value): Unit = set(7, value)
        get(): LocalDateTime? = get(7) as LocalDateTime?

    open var permissions: Int?
        set(value): Unit = set(8, value)
        get(): Int? = get(8) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(
        id: Int? = null,
        fcs: String? = null,
        degree: Array<Int?>? = null,
        phone: String? = null,
        vkid: String? = null,
        login: String? = null,
        password: ByteArray? = null,
        registerdate: LocalDateTime? = null,
        permissions: Int? = null,
    ) : this() {
        this.id = id
        this.fcs = fcs
        this.degree = degree
        this.phone = phone
        this.vkid = vkid
        this.login = login
        this.password = password
        this.registerdate = registerdate
        this.permissions = permissions
        resetChangedOnNotNull()
    }
}
